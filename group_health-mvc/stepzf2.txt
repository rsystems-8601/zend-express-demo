

composer.json
composer.lock
composer.phar
composer-setup.php
openssl.exe
{
    "require": {
        "zendframework/zendframework": "2.5.1",
        "php": ">=5.5",
		"zendframework/zend-mvc": "2.5.0"
    }
}

composer create-project zendframework/skeleton-application path/to/install
composer require zendframework/zend-component-installer
composer global require zendframework/zftool:dev-master
composer require zendframework/zftool:dev-master
cd vendor/zendframework/zftool
composer install
** if error phar disabled**
php -r "ini_set('phar.readonly',0);print(ini_get('phar.readonly'));" 
C:\wamp64\bin\php\php7.0.23\php.ini
phar.readonly = off

D:\zend\flipkart\vendor\zendframework\zftool\composer.json
"zendframework/zend-mvc": "2.5.0",

composer update

php bin/create-phar	

D:\zend\flipkart\vendor\zendframework\zftool>php zftool.phar create module helloworld D:/zend/flipkart/
D:\zend\flipkart\vendor\zendframework\zftool>php zftool.phar create controller index helloworld D:/zend/flipkart
D:\zend\flipkart\vendor\zendframework\zftool>php zftool.phar create action index index helloworld D:/zend/flipkart


cd ..\..\..\
composer serve
--------------------------------------------------------------------------------------








composer create-project zendframework/zend-expressive-skeleton expressive
https://docs.zendframework.com/zend-expressive

https://github.com/zendframework/zend-expressive

http://127.0.0.1:8080/api/ping
<a href="#">
	Ping Test
</a>

Site Setting
*******************
Tom Head Menu
D:\zend\expressive\src\App\templates\layout\default.phtml

Home Page Phtml
D:\zend\expressive\src\App\templates\app\home-page.phtml
D:\zend\expressive\src\App\templates\app\save-doctor.phtml

Create Action 
D:\zend\expressive\src\App\src\Action\HomePageAction.php
D:\zend\expressive\src\App\src\Action\SaveDoctorAction.php


Create Factory
D:\zend\expressive\src\App\src\Action\SaveDoctorFactory.php


Add Route
$app->get('/savedoctor', App\Action\SaveDoctorAction::class, 'savedoctor');


Add Inokes
'factories'  => [
                Action\HomePageAction::class => Action\HomePageFactory::class,
				Action\SaveDoctorAction::class => Action\SaveDoctorFactory::class,
            ],

			

Add DB Connection 
---------------------------------
Add DB Library in expressive folder D:\zend\expressive>
composer require zendframework/zend-db
composer require zendframework/zend-form

Create File
***************
D:\zend\expressive\config\modules.config.php
<?php
  // In config/modules.config.php
  return [
    'Zend\Db', // <-- This line
    'Zend\Form',
    /* ... */
  ];  
***************






***************
D:\zend\expressive\config\autoload\zend-db.global.
<?php
use Zend\Db\ConfigProvider;

return (new ConfigProvider())();
***************



***************
D:\zend\expressive\config\autoload\global.php
<?php
use Zend\Db\Adapter\AdapterAbstractServiceFactory;
return [
    'service_manager' => [
        'abstract_factories' => [
            AdapterAbstractServiceFactory::class,
        ],
    ],
];
*******************


*******************
https://github.com/zendframework/zend-developer-tools/issues/224
D:\zend\expressive\config\autoload\local.php
<?php
return [
    'db' => [
        'driver' => 'Pdo',
        'dsn' => 'mysql:dbname=group_health;host=localhost',
        'driver_options' => [
               PDO::MYSQL_ATTR_INIT_COMMAND => 'SET NAMES \'UTF8\''
        ],
        'username' => 'root',
        'password' => '',
    ],
];

*******************



*****************
Add Some line
D:\zend\expressive\src\App\src\Action\ViewAppointmentFactory.php
use Zend\Db\Adapter\AdapterInterface;
.
..
class ViewAppointmentFactory
{
    public function __invoke(ContainerInterface $container)
    {
		$con = $container->get(AdapterInterface::class);		
		$stmt = $con->query('SELECT * FROM `doctor_appointments`');
		$result = $stmt->execute();
		$result->getResource()->setFetchMode(\PDO::FETCH_ASSOC);
		$rows = $result->getResource()->fetchAll();
		// echo '<pre>';
		// print_r($rows);
		// print_r(get_class_methods($con)); 
		// print_r(get_class_methods($result->getResource())); 
		// die;
		
        $router   = $container->get(RouterInterface::class);
		$router->setQueryResponse= $rows;
        $template = $container->has(TemplateRendererInterface::class)
            ? $container->get(TemplateRendererInterface::class)
            : null;
		.
		..
		...
		....
*****************


composer config --global process-timeout 2000

